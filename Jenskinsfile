//${VERSION} #Your apps version
//${GIT_URL} #Your git url
//${USER} #Your dockerhub or gcr username

pipeline {
    agent any
    environment {
        doError = '0'
        BRANCH_NAME = "${GIT_BRANCH.split('/')[1]}"
        USER = 'xThanaphat'
    }
    stages {
        stage('Clone') {
            steps {
                git 'https://gitlab.com/xThanaphat/training-api-master.git' #${GIT_URL}
            }
        }
        stage('Build and Push Docker Image') {
            when { expression { env.BRANCH_NAME != 'master' } }
            steps {
                script {
                    env.VERSION = "v0.0.${BUILD_NUMBER}"
                    sh '''
                        echo =================Build and Push Docker Image==========================
                        docker build -t testapi:${VERSION} -f TestingAPI/Dockerfile .
                        docker tag testapi:${VERSION} ${USER}/testapi:${VERSION}
                        docker push  ${USER}/testapi:${VERSION}
                    '''
                }
            }
        }
        stage('Deploy To Kubernetes') {
            when { expression { env.BRANCH_NAME != 'master' } }
            steps {
                script {
                    withKubeConfig(credentialsId: "kubeconfig") {
                        sh '''
                            echo =================Deploy To Kubernetes==========================
                            cat k8s/testing-api-deploy.yaml | envsubst | kubectl apply -f -
                            kubectl apply -f k8s/testing-api-svc.yaml
                            sleep 10
                            echo "Deploy Version:${VERSION}"
                        '''
                    }
                }
            }
        }
    }
}
